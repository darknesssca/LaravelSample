image:
  name: docker:19.03.1

variables:
  DOCKER_TLS_CERTDIR: "/certs"
  
stages:
  - build
  - deploy_stage

build_stage:
  stage: build
  before_script:
  - export CURRENT_COMMIT=${CI_COMMIT_SHA::8}
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --build-arg build_env=prod -f docker/Dockerfile --cache-from $CI_REGISTRY_IMAGE:$BRANCH_NAME --tag $CI_REGISTRY_IMAGE:$CURRENT_COMMIT --tag $CI_REGISTRY_IMAGE:master --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CURRENT_COMMIT
    - docker push $CI_REGISTRY_IMAGE:master
    - docker push $CI_REGISTRY_IMAGE:latest\
  only:
    - master
  tags:
    - staging

deploy_staging:
  image: phusion/baseimage
  stage: deploy_stage
  environment:
    name: staging
  script:
    - eval $(ssh-agent -s)
    - echo "$STAGE_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $STAGE_SSH_HOST >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - ssh $STAGE_SSH_USER@$STAGE_SSH_HOST -p $STAGE_SSH_PORT "KUBECONFIG=~/.kube/config kubectl -n benfin rollout restart deployment $DEPLOYMENT_NAME"
    - ssh $STAGE_SSH_USER@$STAGE_SSH_HOST -p $STAGE_SSH_PORT "KUBECONFIG=~/.kube/config kubectl -n benfin rollout restart deployment $DEPLOYMENT_NAME-bg"
  only:
    - master
  tags:
    - staging
